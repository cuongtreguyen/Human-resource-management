# Application Configuration
spring.application.name=hrm-system
server.port=8080

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/hrm_db
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Security JWT Configuration
security.jwt.issuer=hrm-system
security.jwt.access-token-ttl=3600
security.jwt.refresh-token-ttl=86400
security.jwt.kms-key-id=alias/hrm-jwt-key

# AWS Configuration
aws.region=ap-southeast-1
aws.s3.bucket-name=hrm-documents
aws.sqs.queue-url=https://sqs.ap-southeast-1.amazonaws.com/123456789012/hrm-queue

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# OpenTelemetry Configuration
otel.exporter.otlp.endpoint=http://localhost:4317
otel.service.name=hrm-system
otel.service.version=1.0.0

# Logging Configuration
logging.level.org.springframework.security=DEBUG
logging.level.management.member.demo=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
